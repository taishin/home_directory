# エラー時の端末画面の点滅
vbell off
 
# 自動デタッチ
autodetach on

# 起動メッセージ
startup_message off

# スクロールバックバッファ
defscrollback 30000

# ステータスバー
hardstatus on
#hardstatus alwayslastline '%{= .b}%H%{-} %L=%-w%45L>%{=u b.}%n %t%{-}%+w %-17<%=%m/%d %02c:%s'
#hardstatus alwayslastline "[%02c] %`%-w%{=b bw}%n %t%{-}%+w"
#caption always '%?%F%{= bw}%:%{= wk}%?%2n%f%07=%t%='
caption always "%{= Rk} %?%F%{b kr}%? %?%h%:%t (screen #%n)%? %{-}"
#hardstatus alwayslastline "%{= Gk} %-Lw%40L>%{b kg} %n %t %{-}%+Lw%-040=%{b km} %l %{.b} %Y/%m/%d %C:%s %A "
hardstatus alwayslastline "%{= Gk} [%02c] %`%-w%{=b kg}%n %t%{-}%+w"
shelltitle "$ |bash"
sorendition "= Rk"
sorendition '+r .b'
    
# 背景色消去
#defbce "on"
 
# ボールドのテキストを表示するとき、色を明るい青に変更する。
#attrcolor b "b"
      
# アンダーラインの代わりに青のテキストを用いる。
#attrcolor u "-u b"
#attrcolor u "b"
attrcolor u "-u"
       
# 高輝度色のテキストをボールドにもする。
attrcolor i "+b"
        
# 256色表示設定
#term xterm-256color
         
# 起動時のリサイズを抑制
termcapinfo xterm hs@:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l
termcapinfo xterm-256color hs@:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l
termcapinfo xterm* ti@:te@
          
# 別画面サポート。Vimやless使うときに便利
#altscreen on
           
# 新しいウィンドウを生成するときのコマンド
shell $SHELL
            
# ログファイル保存先
logfile "$HOME/.screen/screen-%H.%Y%m%d-%0c%s.%n.%t.log"
             
# ログ取得
log on
deflog on
              
# メッセージを表示する時間(秒単位)
msgwait 5
               
# 次のメッセージを表示するまでの遅延時間(秒単位)
msgminwait 1
               
# 新しいスクリーンを1番から作成する。
#bind c eval 'screen 1'
bind x command -c REGION
bind -c REGION 3 split -v
bind -c REGION 2 split
bind -c REGION 1 only
bind -c REGION 0 remove
bind -c REGION o focus
bind -c REGION ^ resize
                  
# ウィンドウ操作モード(^z w でウィンドウを連続的に操作できるようになる)
bind w eval 'echo "Operate window"' 'command -c operate'
bind -c operate ^] command
bind -c operate j eval 'focus down' 'command -c operate'
bind -c operate k eval 'focus up' 'command -c operate'
bind -c operate h eval 'focus left' 'command -c operate'
bind -c operate l eval 'focus right' 'command -c operate'
bind -c operate t eval 'focus top' 'command -c operate'
bind -c operate b eval 'focus bottom' 'command -c operate'
bind -c operate + eval 'resize -v +1' 'command -c operate'
bind -c operate - eval 'resize -v -1' 'command -c operate'
bind -c operate > eval 'resize -h +1' 'command -c operate'
bind -c operate < eval 'resize -h -1' 'command -c operate'
bind -c operate = eval 'resize -v =' 'command -c operate'
bind -c operate + eval 'resize -h =' 'command -c operate'
                   
# 最初のスクリーンをNo1で作成する。
#screen 1
